@{
    ViewData["Title"] = "Home Page";
}

@model pet2.Models.AddNoteViewModel

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - pet2</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/pet2.styles.css" asp-append-version="true" />

    @* PrismJs loading *@
    <link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.28.0/themes/prism-okaidia.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.28.0/prism.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.28.0/components/prism-csharp.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.28.0/components/prism-python.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.28.0/components/prism-kotlin.min.js"></script>

</head>

<body style="background-color:#36393e">
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-8 p-2 rounded" style="background-color:#63666a">
                <h1 class="text-center">Share your code</h1>
                <p class="text-center">Free way to share your code with short urls and syntax highlighting</p>
            </div>
        </div>
    </div>

    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-8">

                <div class="form-group">
                    <textarea id="codeInput" class="form-control" rows="20" style="background-color:#f8f9fa; color:black; resize:none" placeholder="Paste your code here..." asp-for="Text"></textarea>
                </div>

                <div class="mt-3 d-flex align-items-center">

                    <button type="button" id="saveButton" class="btn btn-primary me-2" disabled>Save</button>

                    <button type="button" id="highlightButton" class="btn btn-secondary me-2">Highlight Code</button>

                    <select class="form-select w-auto" id="selectedLanguage">

                        <option selected>Select Language</option>
                        <option value="csharp">C#</option>
                        <option value="python">Python</option>
                        <option value="javascript">JavaScript</option>
                        <option value="kotlin">Kotlin</option>

                    </select>
                </div>
            </div>
        </div>
    </div>

    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-8">

                <div id="noteUrlBlock" style="display: none;" class="alert alert-info">
                    <strong>URL:</strong> <span id="noteURL"></span>
                </div>

                <button id="copyButton" class="btn btn-success mb-3" style="display: none;">Copy to Clipboard</button>

                <div id="highlightedCodeContainer"></div>
            </div>
        </div>
    </div>

    <script>

        document.getElementById('highlightButton').addEventListener('click', function () {
            const code = document.getElementById('codeInput').value;
            const language = document.getElementById('selectedLanguage').value;


            fetch('/Highlight/HighlightSyntax', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ Text: code, Language: language })
            })
                .then(response => response.json())
                .then(data => {
                    document.getElementById('highlightedCodeContainer').innerHTML = data.highlightedCode;
                    Prism.highlightAll();
                    document.getElementById('copyButton').style.display = 'inline-block';
                    document.getElementById('saveButton').disabled = false;
                });
        });

        document.getElementById('copyButton').addEventListener('click', function () {

            const highlightedCodeContainer = document.getElementById('highlightedCodeContainer');
            const highlightedCodeHTML = highlightedCodeContainer.innerHTML;

            const tempDiv = document.createElement('div');
            tempDiv.innerHTML = highlightedCodeHTML;
            document.body.appendChild(tempDiv);

            const range = document.createRange();
            range.selectNode(tempDiv);
            window.getSelection().removeAllRanges();
            window.getSelection().addRange(range);

            document.execCommand('copy');

            document.body.removeChild(tempDiv);
            window.getSelection().removeAllRanges();
        });


        document.getElementById('saveButton').addEventListener('click', function (event) {
            event.preventDefault();

            const code = document.getElementById('codeInput').value;
            const language = document.getElementById('selectedLanguage').value;

            if (!code.trim()) {
                alert('Please paste your code before saving.');
                return;
            }

            fetch('/Add/CreateNote', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    Text: code,
                    Language: language
                })
            })
                .then(response => {
                    if (!response.ok) {
                        return response.json().then(err => { throw new Error(err.error); });
                    }
                    return response.json();
                })
                .then(data => {
                    console.log('Response Data:', data);  // Log the full data to debug

                    if (data.note && data.note.shortUrl) {
                        const noteIdBlock = document.getElementById('noteUrlBlock');
                        const noteIdSpan = document.getElementById('noteURL');
                        noteIdSpan.textContent = data.note.shortUrl;
                        noteIdBlock.style.display = 'block';
                    } else {
                        console.error('shorturl not found in response');
                        alert('Failed to retrieve the short URL.');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Failed to save the note: ' + error.message);
                });
        });

    </script>
</body>
